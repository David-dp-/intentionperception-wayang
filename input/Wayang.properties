# Depends on dots-per-inch of the display; see http://discuss.fogcreek.com/joelonsoftware3/default.asp?cmd=show&ixPost=106044
#twipsPerSpatialUnit = 56.7
# But in practice, using two machines with 96dpi 1280x800, we found we needed a different multiplier to get the SWF values to match display values
#wirawane: 
#Flash definition of 1 twip is 1/20th of a pixel, hence 1 twip is variable.
#On Lenovo L2250p wide (22 inch) display with 1680 x 1050 native resolution, the pixel size is 0.282 mm.
#What the parameter really represents is the size of each spatial unit in the grid Wayang uses to divide the animation.
#The spatial unit size changes as the pixel size changes across monitors with different resolutions.

#We found that twipsPerSpatialUnit value of 65.8 does not provide a sufficiently fine-grained resolution.
#twipsPerSpatialUnit = 65.8
#The new size of the spatial unit is 50% of the old size. The size on a 22 inch 1680 x 1050 resolution monitor works out to 0.46 mm. 
twipsPerSpatialUnit = 32.9

pixelsPerTwip = 0.05

#Logging settings
#loggingMethod should be either of these: consoleOnly, logfileOnly, consoleAndLogfile
loggingMethod = consoleAndLogfile
#loggingLevel should be either of these: completedEdges, allEdges, performanceData
loggingLevel = allEdges

# ALL OF THE FOLLOWING VALUES ARE JUST GUESSES SO FAR

# When comparing the height and width of a bounding box to see if the shape could be either 1) a circle or
#  square, or 2) something else, we allow this much fudge factor
maxTwipsDiffBetweenHeightAndWidthForRecognizingCirclesAndSquares = 4

# When a magnitude is calculated between frames N and N+1, and then another
#  magnitude value is calculated between frames N+1 and N+2, we don't want to
#  insist that those values be exactly the same; instead we allow this much
#  error.
#maxAllowableErrorInMagnitude = 0.1
maxAllowableErrorInMagnitude = 0.2

# Similar to maxAllowableErrorInMagnitude, we want to allow some error when
# testing for equality between two acceleration values.
maxAllowableErrorInAcceleration = 0.1

# Upper limit for an angle deviation between two vectors before the deviation
# starts to become perceivable.
maxAllowableErrorInDegrees = 4.0

# Upper limit for perpendicular error per position (on average) for line of best fit
# Unit is in SU
maxAllowableErrorForLineOfBestFitPerPositionOnAverage = 4.0

# Upper limit for perpendicular error per position (on average) for circle of best fit
maxAllowableErrorForCircleOfBestFitPerPositionOnAverage = 4.0

# Upper limit for ratio between 2 circles of best fit defining a wiggle on 2 opposite sides
maxAllowableRatioForWiggleDefiningCOBFs = 20.0

# Lower limit for the period a time during which an object is stationary for the object to be
# be considered to have noticed another object
# The unit is msecs
minElapsedTimeOfStationaryTrajectoryForNotice = 123.0

# Upper limit for the period a time during which an object is stationary for the object to be
# be considered to have noticed another object
# The unit is msecs
maxElapsedTimeOfStationaryTrajectoryForNotice = 410.0

# Upper limit for the distance between a noticed object and the object that notices.
# Unit is in SU
maxDistanceToNoticedObject = 75.0

# Upper limit for the length of the linear segment of a trajectory due to double forces/intentions
# Unit is in SU
maxLinearSegmentLengthForDoubleIntentionsOrForces = 40.0

# Upper limit for the length of the linear segment of a curved trajectory
# Unit is in SU
maxLinearSegmentLengthForCurvedTrajectory = 30.0

# Number of frames that the wiggle_baseStep_with_overlap rule should cover
wiggleBaseStepWithOverlapNumberOfFrames = 4

# Max incomplete edge queue size
maxIncompleteEdgeQueueSize = 48000

# Controls the sizing and spacing of the parse graph viz
graphWidth = 400
graphHeight = 200
graphNodeSeparation = 80
graphMargin = 30
graphNumDifferentArcWidths = 6

# ALL OF THE FOLLOWING ARE READ INTO THE PERCEPTUAL-LIMITS OBJECT
# ALL ARE ASSUMED TO BE TYPE FLOAT.

# Figures with less area in spatial unit squared will be filtered out by
#  perceptibilityFilter.pro before inference ever sees them in a frame.
#minPerceptibleArea = 4.0
minPerceptibleArea = 16.0

# Figures whose RGB color values differ less than this (as a sum of differences)
#  will be filtered out by perceptibilityFilter.pro before inference ever sees
#  them in a frame.
minPerceptibleRGBDifference = 8.0

# Figures that move less than this (a radius measured in spatial units) will
#  be considered "stationary" in KnowledgeBase.ecl
#minPerceptibleChangeInPosition = 2.0
#minPerceptibleChangeInPosition = 1.0 
minPerceptibleChangeInPosition = 1.0

# Larger figures can move farther before inducing flicker (I assume).
# We also assume proportionality of area to distance is linear.
# Was 4.0; changed so circle15mm_translation.swf would pass just for debugging purposes; //TODO check if it should be changed back to 4.0 or empirically-supported value.
#minAreaOverDistanceToAvoidFlicker = 4.0
minAreaOverDistanceToAvoidFlicker = 6.0

# Assuming the area-over-distance max is met, flicker might still be induced
# if the time between samples is too long (I assume).
# Was 40.0; changed so circle15mm_translation.swf would pass just for debugging purposes; //TODO if it should be changed back to 4.0 or empirically-supported value.
maxElapsedTimeToAvoidFlicker = 90.0

# We assume that if one divides the amount of area change (in spatial unit^2) by the area,
# and then divide by how many msec that change took, that there would be a min
# such value that is perceptible. We assume that such a linear relation is
# enough to make any decision about whether a change in area is perceptible.
#minPerceptibleAreaChangePerMsec = 0.1
minPerceptibleAreaChangePerMsec = 0.4

# We assume that if one divides the sum of changes in Red, Green, and Blue
# values when a color change occurs, and then divide by how many msec that
# change took, that there would be a min such value that is perceptible. We
# assume that such a linear relation is enough to make any decision about
# whether a change in color is perceptible.
minPerceptibleColorChangePerMsec = 0.5

# Minimum ratio between acceleration and speed for acceleration to be noticeable.
# IMPORTANT: the ratio should have a unit of 1/msec. If, say, the ratio between
# acceleration and speed in spatial unit / sec^2 and spatial unit / sec, gives
# a value of 0.5 /sec, this should be translated to 0.0005 / msec.
# //TODO: it seems that the duration of the trajectory also influences the noticeability, so this ratio alone might not be enough
minPerceptibleAccelerationOverSpeedRatio = 0.0008